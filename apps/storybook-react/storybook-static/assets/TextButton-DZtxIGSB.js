import{r as u,j as c}from"./iframe-BknD6R0A.js";import{q as e,T as o}from"./index-CiWXofBh.js";import{t as m}from"./tw-merge-B12XlTeZ.js";import{B as y}from"./ButtonBase-DbNzlsEJ.js";const f={[e.BodyXs]:o.BodyXs,[e.BodySm]:o.BodySm,[e.BodyMd]:o.BodyMd,[e.BodyLg]:o.BodyLg},a=u.forwardRef(({className:n,isInverse:t,isDisabled:r,size:i=e.BodyMd,textProps:s,...d},p)=>{const l=m("bg-transparent h-auto rounded-none px-0","transform-none transition-none active:scale-100",!t&&"text-primary-default",t&&"text-primary-inverse",!r&&[!t&&["hover:bg-hover hover:text-primary-default-hover hover:underline hover:decoration-primary-default-hover hover:decoration-2 hover:underline-offset-4","active:bg-pressed active:text-primary-default-pressed active:decoration-primary-default-pressed"],t&&["hover:bg-hover hover:text-primary-inverse hover:underline hover:decoration-primary-inverse hover:decoration-2 hover:underline-offset-4","active:bg-pressed active:text-primary-inverse active:decoration-primary-inverse"]],r&&["opacity-50","cursor-not-allowed"],n);return c.jsx(y,{ref:p,className:l,isDisabled:r,textProps:{variant:f[i],...s},...d})});a.displayName="TextButton";a.__docgenInfo={description:"",methods:[],displayName:"TextButton",props:{className:{required:!1,tsType:{name:"string"},description:"Optional prop for additional CSS classes to be applied to the TextButton component"},isInverse:{required:!1,tsType:{name:"boolean"},description:`Optional prop that when true, applies inverse styling to the button

@default false`},isDisabled:{required:!1,tsType:{name:"boolean"},description:`Optional prop that when true, disables the button

@default false`},size:{required:!1,tsType:{name:"TextButtonSize"},description:`Optional prop to specify the size of the TextButton

@default TextButtonSize.BodyMd`,defaultValue:{value:"TextButtonSize.BodyMd",computed:!0}},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:`Optional CSS styles to be applied to the component.
Should be used sparingly and only for dynamic styles that can't be achieved with className.`}}};export{a as T};
